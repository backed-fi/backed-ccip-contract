/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BasicMessageReceiver,
  BasicMessageReceiverInterface,
} from "../../../contracts/test/BasicMessageReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestMessageDetails",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum BasicMessageReceiver.TokenVariant",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000f1b38038062000f1b833981810160405281019062000037919062000153565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620000a4919062000196565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011b82620000ee565b9050919050565b6200012d816200010e565b81146200013957600080fd5b50565b6000815190506200014d8162000122565b92915050565b6000602082840312156200016c576200016b620000e9565b5b60006200017c848285016200013c565b91505092915050565b62000190816200010e565b82525050565b6000602082019050620001ad600083018462000185565b92915050565b608051610d45620001d66000396000818161022a01526102d10152610d456000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780633394e6f41461008157806385572ffb146100a5578063b0f479a1146100c1575b600080fd5b61006b6004803603810190610066919061049f565b6100df565b60405161007891906104e7565b60405180910390f35b6100896101b1565b60405161009c979695949392919061060f565b60405180910390f35b6100bf60048036038101906100ba91906106a2565b610228565b005b6100c96102cd565b6040516100d691906106eb565b60405180910390f35b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101aa57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008060008060008060008054600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160149054906101000a900467ffffffffffffffff16600254600560009054906101000a900460ff16600354600454965096509650965096509650965090919293949596565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b857336040517fd7f733340000000000000000000000000000000000000000000000000000000081526004016102af91906106eb565b60405180910390fd5b6102ca816102c590610afe565b6102f5565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b8060000151600081905550600080600080600085606001518060200190518101906103209190610c38565b9450945094509450945084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508260028190555081600560006101000a81548160ff021916908360018111156103c0576103bf610598565b5b02179055506001808111156103d8576103d7610598565b5b600560009054906101000a900460ff1660018111156103fa576103f9610598565b5b0361042b57600080828060200190518101906104169190610ccf565b91509150816003819055508060048190555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61047c81610447565b811461048757600080fd5b50565b60008135905061049981610473565b92915050565b6000602082840312156104b5576104b461043d565b5b60006104c38482850161048a565b91505092915050565b60008115159050919050565b6104e1816104cc565b82525050565b60006020820190506104fc60008301846104d8565b92915050565b6000819050919050565b61051581610502565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105468261051b565b9050919050565b6105568161053b565b82525050565b600067ffffffffffffffff82169050919050565b6105798161055c565b82525050565b6000819050919050565b6105928161057f565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106105d8576105d7610598565b5b50565b60008190506105e9826105c7565b919050565b60006105f9826105db565b9050919050565b610609816105ee565b82525050565b600060e082019050610624600083018a61050c565b610631602083018961054d565b61063e6040830188610570565b61064b6060830187610589565b6106586080830186610600565b61066560a0830185610589565b61067260c0830184610589565b98975050505050505050565b600080fd5b600060a082840312156106995761069861067e565b5b81905092915050565b6000602082840312156106b8576106b761043d565b5b600082013567ffffffffffffffff8111156106d6576106d5610442565b5b6106e284828501610683565b91505092915050565b6000602082019050610700600083018461054d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107548261070b565b810181811067ffffffffffffffff821117156107735761077261071c565b5b80604052505050565b6000610786610433565b9050610792828261074b565b919050565b600080fd5b6107a581610502565b81146107b057600080fd5b50565b6000813590506107c28161079c565b92915050565b6107d18161055c565b81146107dc57600080fd5b50565b6000813590506107ee816107c8565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156108195761081861071c565b5b6108228261070b565b9050602081019050919050565b82818337600083830152505050565b600061085161084c846107fe565b61077c565b90508281526020810184848401111561086d5761086c6107f9565b5b61087884828561082f565b509392505050565b600082601f830112610895576108946107f4565b5b81356108a584826020860161083e565b91505092915050565b600067ffffffffffffffff8211156108c9576108c861071c565b5b602082029050602081019050919050565b600080fd5b6108e88161053b565b81146108f357600080fd5b50565b600081359050610905816108df565b92915050565b6109148161057f565b811461091f57600080fd5b50565b6000813590506109318161090b565b92915050565b60006040828403121561094d5761094c610706565b5b610957604061077c565b90506000610967848285016108f6565b600083015250602061097b84828501610922565b60208301525092915050565b600061099a610995846108ae565b61077c565b905080838252602082019050604084028301858111156109bd576109bc6108da565b5b835b818110156109e657806109d28882610937565b8452602084019350506040810190506109bf565b5050509392505050565b600082601f830112610a0557610a046107f4565b5b8135610a15848260208601610987565b91505092915050565b600060a08284031215610a3457610a33610706565b5b610a3e60a061077c565b90506000610a4e848285016107b3565b6000830152506020610a62848285016107df565b602083015250604082013567ffffffffffffffff811115610a8657610a85610797565b5b610a9284828501610880565b604083015250606082013567ffffffffffffffff811115610ab657610ab5610797565b5b610ac284828501610880565b606083015250608082013567ffffffffffffffff811115610ae657610ae5610797565b5b610af2848285016109f0565b60808301525092915050565b6000610b0a3683610a1e565b9050919050565b6000610b1c8261051b565b9050919050565b610b2c81610b11565b8114610b3757600080fd5b50565b600081519050610b4981610b23565b92915050565b600081519050610b5e816107c8565b92915050565b600081519050610b738161090b565b92915050565b60028110610b8657600080fd5b50565b600081519050610b9881610b79565b92915050565b60005b83811015610bbc578082015181840152602081019050610ba1565b60008484015250505050565b6000610bdb610bd6846107fe565b61077c565b905082815260208101848484011115610bf757610bf66107f9565b5b610c02848285610b9e565b509392505050565b600082601f830112610c1f57610c1e6107f4565b5b8151610c2f848260208601610bc8565b91505092915050565b600080600080600060a08688031215610c5457610c5361043d565b5b6000610c6288828901610b3a565b9550506020610c7388828901610b4f565b9450506040610c8488828901610b64565b9350506060610c9588828901610b89565b925050608086015167ffffffffffffffff811115610cb657610cb5610442565b5b610cc288828901610c0a565b9150509295509295909350565b60008060408385031215610ce657610ce561043d565b5b6000610cf485828601610b64565b9250506020610d0585828601610b64565b915050925092905056fea2646970667358221220fb3f9d272b443c63184a8b4ef9619de3c2fdda76d929e0bc92f371955402c01364736f6c63430008170033";

type BasicMessageReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicMessageReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicMessageReceiver__factory extends ContractFactory {
  constructor(...args: BasicMessageReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, overrides || {});
  }
  override deploy(
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, overrides || {}) as Promise<
      BasicMessageReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BasicMessageReceiver__factory {
    return super.connect(runner) as BasicMessageReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicMessageReceiverInterface {
    return new Interface(_abi) as BasicMessageReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BasicMessageReceiver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BasicMessageReceiver;
  }
}
