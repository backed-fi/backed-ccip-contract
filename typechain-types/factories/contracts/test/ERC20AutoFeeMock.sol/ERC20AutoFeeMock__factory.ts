/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20AutoFeeMock,
  ERC20AutoFeeMockInterface,
} from "../../../../contracts/test/ERC20AutoFeeMock.sol/ERC20AutoFeeMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_periodLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastTimeFeeApplied",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feePerPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "newMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodsPassed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_underlyingAmount",
        type: "uint256",
      },
    ],
    name: "getSharesByUnderlyingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "getUnderlyingAmountByShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeFeeApplied",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierUpdater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLastTimeFeeApplied",
        type: "uint256",
      },
    ],
    name: "setLastTimeFeeApplied",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMultiplierUpdater",
        type: "address",
      },
    ],
    name: "setMultiplierUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPeriodLength",
        type: "uint256",
      },
    ],
    name: "setPeriodLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "sharesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharesAmount",
        type: "uint256",
      },
    ],
    name: "transferShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oldMultiplier",
        type: "uint256",
      },
    ],
    name: "updateMultiplierValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fb538038062001fb583398181016040528101906200003791906200025c565b848481600390816200004a919062000563565b5080600490816200005c919062000563565b505050670de0b6b3a764000060098190555082600881905550816006819055508060078190555050505050506200064a565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000f782620000ac565b810181811067ffffffffffffffff82111715620001195762000118620000bd565b5b80604052505050565b60006200012e6200008e565b90506200013c8282620000ec565b919050565b600067ffffffffffffffff8211156200015f576200015e620000bd565b5b6200016a82620000ac565b9050602081019050919050565b60005b83811015620001975780820151818401526020810190506200017a565b60008484015250505050565b6000620001ba620001b48462000141565b62000122565b905082815260208101848484011115620001d957620001d8620000a7565b5b620001e684828562000177565b509392505050565b600082601f830112620002065762000205620000a2565b5b815162000218848260208601620001a3565b91505092915050565b6000819050919050565b620002368162000221565b81146200024257600080fd5b50565b60008151905062000256816200022b565b92915050565b600080600080600060a086880312156200027b576200027a62000098565b5b600086015167ffffffffffffffff8111156200029c576200029b6200009d565b5b620002aa88828901620001ee565b955050602086015167ffffffffffffffff811115620002ce57620002cd6200009d565b5b620002dc88828901620001ee565b9450506040620002ef8882890162000245565b9350506060620003028882890162000245565b9250506080620003158882890162000245565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037557607f821691505b6020821081036200038b576200038a6200032d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b6565b620004018683620003b6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620004446200043e620004388462000221565b62000419565b62000221565b9050919050565b6000819050919050565b620004608362000423565b620004786200046f826200044b565b848454620003c3565b825550505050565b600090565b6200048f62000480565b6200049c81848462000455565b505050565b5b81811015620004c457620004b860008262000485565b600181019050620004a2565b5050565b601f8211156200051357620004dd8162000391565b620004e884620003a6565b81016020851015620004f8578190505b620005106200050785620003a6565b830182620004a1565b50505b505050565b600082821c905092915050565b6000620005386000198460080262000518565b1980831691505092915050565b600062000553838362000525565b9150826002028217905092915050565b6200056e8262000322565b67ffffffffffffffff8111156200058a5762000589620000bd565b5b6200059682546200035c565b620005a3828285620004c8565b600060209050601f831160018114620005db5760008415620005c6578287015190505b620005d2858262000545565b86555062000642565b601f198416620005eb8662000391565b60005b828110156200061557848901518255600182019150602085019450602081019050620005ee565b8683101562000635578489015162000631601f89168262000525565b8355505b6001600288020188555050505b505050505050565b61195b806200065a6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806370a08231116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461049a578063f00c1dff146104ca578063f5eb42dc146104e8578063f5f68898146105185761018e565b8063a9059cbb14610430578063beabacc814610460578063d2ca21151461047c5761018e565b806370a082311461034a5780638fcb4e5b1461037a578063944b511c146103aa57806395d89b41146103da5780639dc29fac146103f8578063a879a9db146104145761018e565b806323b872dd1161014b5780633dfa34cd116101255780633dfa34cd146102c457806340c10f19146102e2578063430c777c146102fe57806344acb51b1461031a5761018e565b806323b872dd146102575780632b63c30014610287578063313ce567146102a65761018e565b80630194b09b1461019357806306fdde03146101b1578063095ea7b3146101cf57806318160ddd146101ff5780631b3ed7221461021d5780631c5633d71461023b575b600080fd5b61019b610534565b6040516101a89190611388565b60405180910390f35b6101b961055a565b6040516101c69190611433565b60405180910390f35b6101e960048036038101906101e491906114bc565b6105ec565b6040516101f69190611517565b60405180910390f35b61020761060f565b6040516102149190611541565b60405180910390f35b61022561062f565b6040516102329190611541565b60405180910390f35b6102556004803603810190610250919061155c565b610635565b005b610271600480360381019061026c9190611589565b610684565b60405161027e9190611517565b60405180910390f35b61028f6106b3565b60405161029d9291906115dc565b60405180910390f35b6102ae610737565b6040516102bb9190611621565b60405180910390f35b6102cc610740565b6040516102d99190611541565b60405180910390f35b6102fc60048036038101906102f791906114bc565b610746565b005b6103186004803603810190610313919061155c565b6107ca565b005b610334600480360381019061032f919061155c565b61085c565b6040516103419190611541565b60405180910390f35b610364600480360381019061035f919061163c565b61087c565b6040516103719190611541565b60405180910390f35b610394600480360381019061038f91906114bc565b6108a4565b6040516103a19190611517565b60405180910390f35b6103c460048036038101906103bf919061155c565b61091e565b6040516103d19190611541565b60405180910390f35b6103e261093e565b6040516103ef9190611433565b60405180910390f35b610412600480360381019061040d91906114bc565b6109d0565b005b61042e60048036038101906104299190611669565b610a89565b005b61044a600480360381019061044591906114bc565b610adb565b6040516104579190611517565b60405180910390f35b61047a60048036038101906104759190611589565b610afe565b005b610484610c2d565b6040516104919190611541565b60405180910390f35b6104b460048036038101906104af91906116a9565b610c33565b6040516104c19190611541565b60405180910390f35b6104d2610cba565b6040516104df9190611541565b60405180910390f35b61050260048036038101906104fd919061163c565b610cc0565b60405161050f9190611541565b60405180910390f35b610532600480360381019061052d919061163c565b610d09565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805461056990611718565b80601f016020809104026020016040519081016040528092919081815260200182805461059590611718565b80156105e25780601f106105b7576101008083540402835291602001916105e2565b820191906000526020600020905b8154815290600101906020018083116105c557829003601f168201915b5050505050905090565b6000806105f7610d4d565b9050610604818585610d55565b600191505092915050565b60008061061a6106b3565b509050610629600b5482610d67565b91505090565b60095481565b6000806106406106b3565b91509150806008546106529190611778565b60065461065f91906117ba565b60068190555081600954146106785761067782610d90565b5b82600881905550505050565b60008061068f610d4d565b905061069c858285610d9a565b6106a7858585610e2e565b60019150509392505050565b600080600854600654426106c791906117ee565b6106d19190611851565b90506009549150600060075411156107335760005b8181101561073157670de0b6b3a7640000600754670de0b6b3a764000061070d91906117ee565b846107189190611778565b6107229190611851565b925080806001019150506106e6565b505b9091565b60006012905090565b60065481565b600061075482600954610f22565b905080600b600082825461076891906117ba565b9250508190555080600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107be91906117ba565b92505081905550505050565b6000806107d56106b3565b91509150806008546107e79190611778565b6006546107f491906117ba565b600681905550816009541461080d5761080c82610d90565b5b60008303610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610847906118ce565b60405180910390fd5b82600681905550505050565b6000806108676106b3565b5090506108748382610f22565b915050919050565b6000806108876106b3565b50905061089c61089684610cc0565b82610d67565b915050919050565b60008060006108b16106b3565b91509150806008546108c39190611778565b6006546108d091906117ba565b60068190555081600954146108e9576108e882610d90565b5b60006108f3610d4d565b9050600061090386600954610d67565b9050610910828883610afe565b600194505050505092915050565b6000806109296106b3565b5090506109368382610d67565b915050919050565b60606004805461094d90611718565b80601f016020809104026020016040519081016040528092919081815260200182805461097990611718565b80156109c65780601f1061099b576101008083540402835291602001916109c6565b820191906000526020600020905b8154815290600101906020018083116109a957829003601f168201915b5050505050905090565b60006109de82600954610f22565b90506000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818103600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600b6000828254610a7c91906117ee565b9250508190555050505050565b600080610a946106b3565b9150915080600854610aa69190611778565b600654610ab391906117ba565b6006819055508160095414610acc57610acb82610d90565b5b610ad584610d90565b50505050565b600080610ae6610d4d565b9050610af3818585610e2e565b600191505092915050565b6000610b0c82600954610f22565b90506000600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818103600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be391906117ba565b600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b60085481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60075481565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610d628383836001610f4b565b505050565b6000670de0b6b3a76400008284610d7e9190611778565b610d889190611851565b905092915050565b8060098190555050565b6000610da68484610c33565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e285781811015610e18578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e0f939291906118ee565b60405180910390fd5b610e2784848484036000610f4b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ea05760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e979190611388565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f125760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f099190611388565b60405180910390fd5b610f1d838383611122565b505050565b600081670de0b6b3a764000084610f399190611778565b610f439190611851565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fbd5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fb49190611388565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361102f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110269190611388565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561111c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111139190611541565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361117457806002600082825461116891906117ba565b92505081905550611247565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611200578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016111f7939291906118ee565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129057806002600082825403925050819055506112dd565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161133a9190611541565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061137282611347565b9050919050565b61138281611367565b82525050565b600060208201905061139d6000830184611379565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113dd5780820151818401526020810190506113c2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611405826113a3565b61140f81856113ae565b935061141f8185602086016113bf565b611428816113e9565b840191505092915050565b6000602082019050818103600083015261144d81846113fa565b905092915050565b600080fd5b61146381611367565b811461146e57600080fd5b50565b6000813590506114808161145a565b92915050565b6000819050919050565b61149981611486565b81146114a457600080fd5b50565b6000813590506114b681611490565b92915050565b600080604083850312156114d3576114d2611455565b5b60006114e185828601611471565b92505060206114f2858286016114a7565b9150509250929050565b60008115159050919050565b611511816114fc565b82525050565b600060208201905061152c6000830184611508565b92915050565b61153b81611486565b82525050565b60006020820190506115566000830184611532565b92915050565b60006020828403121561157257611571611455565b5b6000611580848285016114a7565b91505092915050565b6000806000606084860312156115a2576115a1611455565b5b60006115b086828701611471565b93505060206115c186828701611471565b92505060406115d2868287016114a7565b9150509250925092565b60006040820190506115f16000830185611532565b6115fe6020830184611532565b9392505050565b600060ff82169050919050565b61161b81611605565b82525050565b60006020820190506116366000830184611612565b92915050565b60006020828403121561165257611651611455565b5b600061166084828501611471565b91505092915050565b600080604083850312156116805761167f611455565b5b600061168e858286016114a7565b925050602061169f858286016114a7565b9150509250929050565b600080604083850312156116c0576116bf611455565b5b60006116ce85828601611471565b92505060206116df85828601611471565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061173057607f821691505b602082108103611743576117426116e9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061178382611486565b915061178e83611486565b925082820261179c81611486565b915082820484148315176117b3576117b2611749565b5b5092915050565b60006117c582611486565b91506117d083611486565b92508282019050808211156117e8576117e7611749565b5b92915050565b60006117f982611486565b915061180483611486565b925082820390508181111561181c5761181b611749565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061185c82611486565b915061186783611486565b92508261187757611876611822565b5b828204905092915050565b7f496e76616c6964206c6173742074696d6520666565206170706c696564000000600082015250565b60006118b8601d836113ae565b91506118c382611882565b602082019050919050565b600060208201905081810360008301526118e7816118ab565b9050919050565b60006060820190506119036000830186611379565b6119106020830185611532565b61191d6040830184611532565b94935050505056fea26469706673582212207f1062436d479de439bdcdebfa0bde78c8e800aca1f87b60ec17121a8573de7064736f6c63430008170033";

type ERC20AutoFeeMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20AutoFeeMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20AutoFeeMock__factory extends ContractFactory {
  constructor(...args: ERC20AutoFeeMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    _periodLength: BigNumberish,
    _lastTimeFeeApplied: BigNumberish,
    _feePerPeriod: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      _periodLength,
      _lastTimeFeeApplied,
      _feePerPeriod,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    _periodLength: BigNumberish,
    _lastTimeFeeApplied: BigNumberish,
    _feePerPeriod: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      _periodLength,
      _lastTimeFeeApplied,
      _feePerPeriod,
      overrides || {}
    ) as Promise<
      ERC20AutoFeeMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20AutoFeeMock__factory {
    return super.connect(runner) as ERC20AutoFeeMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20AutoFeeMockInterface {
    return new Interface(_abi) as ERC20AutoFeeMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20AutoFeeMock {
    return new Contract(address, _abi, runner) as unknown as ERC20AutoFeeMock;
  }
}
